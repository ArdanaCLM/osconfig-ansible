#
# (c) Copyright 2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

# TODO(fergal): remove once ardana-ansible updated to specify zypp_server
- set_fact:
    zypp_server: "{{ deployer_server }}"
  when: zypp_server is not defined and deployer_server is defined

- set_fact:
    zypp_server_http: "{{ zypp_server }}"
  when: zypp_server_http is not defined

##########################
# Legacy media mode only #
##########################

- name: osconfig | setup-zypp | Check SLES OS zypper repo location
  delegate_to: localhost
  stat:
    path: "{{ PACKAGE_CONSTANTS.REPO_DIR }}/{{ osconfig_zypper_os_repo_loc }}/suse"
  register: _sles_os_repo_stat_result

- name: osconfig | setup-zypp | Remove any old OS zypper repo
  become: yes
  zypper_repository:
    name: "{{ osconfig_zypper_os_repo_name }}"
    state: absent
  when: _sles_os_repo_stat_result.stat.exists

- name: osconfig | setup-zypp | Configure the OS zypper repo
  become: yes
  zypper_repository:
    name: "{{ osconfig_zypper_os_repo_name }}"
    description: "{{ osconfig_zypper_os_repo_name }}"
    repo: "{{ zypp_server }}/{{ osconfig_zypper_os_repo_loc }}"
  when: _sles_os_repo_stat_result.stat.exists

##############################
# Import gpg key for PTF repo#
##############################
# NOTE(toabctl): The include will set the hostvars['localhost']['ptf_signing_key'] variable
- include: get-ptf-signing-key.yml
  become: yes
  delegate_to: localhost
  delegate_facts: yes

- name: osconfig | setup-zypp | Import ptf signing key into RPM key DB
  become: yes
  shell: |
    ARDANA_TMPDIR=$(mktemp -d --tmpdir ardana-gpg-pubkey-XXXXXX)
    echo "{{ hostvars['localhost']['ptf_signing_key'] }}" >> $ARDANA_TMPDIR/pub.key
    rpmkeys --import $ARDANA_TMPDIR/pub.key
    rm -rf $ARDANA_TMPDIR
  when: hostvars['localhost']['ptf_signing_key'] is defined and not deployer_media_legacy_layout|bool

##############################
# Set up required SUSE Media #
##############################

- name: osconfig | setup-zypp | Add SLES and Cloud repos
  set_fact:
    _repositories:
      - alias: Cloud
        name: Cloud
      - alias: PTF
        name: PTF
      - alias: SLES12-SP3-Pool
        name: SLES12-SP3-Pool
      - alias: SLES12-SP3-Updates
        name:  SLES12-SP3-Updates
      - alias: SLES12-SP3-Updates-test
        name:  SLES12-SP3-Updates-test
      - alias: SLES12-SP3-LTSS-Updates
        name:  SLES12-SP3-LTSS-Updates
      - alias: SLES12-SP3-LTSS-Updates-test
        name:  SLES12-SP3-LTSS-Updates-test
      - alias: SUSE-OpenStack-Cloud-8-Pool
        name: OpenStack-Cloud-8-Pool
      - alias: SUSE-OpenStack-Cloud-8-Updates
        name:  OpenStack-Cloud-8-Updates
      - alias: SUSE-OpenStack-Cloud-8-Updates-test
        name:  OpenStack-Cloud-8-Updates-test
      - alias: HPE-Helion-OpenStack-8-Pool
        name: OpenStack-8-Pool
      - alias: HPE-Helion-OpenStack-8-Updates
        name: OpenStack-8-Updates
      - alias: HPE-Helion-OpenStack-8-Updates-test
        name: OpenStack-8-Updates-test

- set_fact:
    suse_release: suse-{{ansible_distribution_version}}

- name: osconfig | setup-zypp | Configure SLES and Cloud repos on nodes
  become: yes
  zypper_repository:
    name: "{{ item.alias }}"
    description: "{{ item.name }}"
    repo: "{{ zypp_server_http }}/SUSE-12-3/{{ ansible_architecture }}/repos/{{ item.alias }}"
  with_items: _repositories
  # If the repositories are not available on the deployer, that is not
  # necessarily critical yet. The next tasks will check whether the release
  # package is available. If it is, then at least the Cloud media made it onto
  # the node somehow. In the upgrade stage, we will need to do more strict
  # verification that the SLES and Cloud Pool and Updates repositories have
  # made it onto the node.
  ignore_errors: True

- include: check-product-status.yml

############################
# Set up third party repos #
############################

- name: osconfig | setup-zypp | Get thirdparty symlink source
  delegate_to: localhost
  stat:
    path: "{{ zypp_thirdparty_dir }}/latest"
  register: latest_source_result
  when: thirdparty_zypp_repo_present

- name: osconfig | setup-zypp | Remove any old thirdparty zypp repo on SLES nodes
  become: yes
  zypper_repository:
    name: tprepo
    state: absent
  when: thirdparty_zypp_repo_present

- name: osconfig | setup-zypp | Configure the thirdparty zypp repo on SLES nodes
  become: yes
  zypper_repository:
    name: tprepo
    description: Thirdparty Repository
    repo: "{{ zypp_server }}/{{ zypp_thirdparty_loc }}/{{ latest_source_result.stat.lnk_source | basename }}"
    # TODO: trust the 3rd party key
    disable_gpg_check: yes
  when: thirdparty_zypp_repo_present

#####################
# Refresh all repos #
#####################

- name: osconfig | setup-zypp | Generate list of zypper repos to refresh
  set_fact:
    _refresh_repos: >
      {%- set _rr_list = [] -%}
      {%- if _sles_os_repo_stat_result.stat.exists -%}
      {%-   set _ = _rr_list.append(osconfig_zypper_os_repo_name) -%}
      {%- endif -%}
      {%- for r in _repositories -%}
      {%-   set _ = _rr_list.append(r.name) -%}
      {%- endfor -%}
      {%- if thirdparty_zypp_repo_present -%}
      {%-   set _ = _rr_list.append("tprepo") -%}
      {%- endif -%}
      {{ _rr_list|unique }}

# include refresh task until we upgrade to Ansible 2.2+ and use the
# zypper_repository.runrefresh flag
- name: osconfig | setup-zypp | Refresh newly added repositories
  become: yes
  command:  "zypper --non-interactive refresh --force {{ _refresh_repos | join(' ') }}"
